{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alper\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\word\\\\my-app\\\\src\\\\component\\\\hospital\\\\HospitalPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // React Router'dan Link bileşeni\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HospitalPage = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [newPatient, setNewPatient] = useState({\n    firstName: '',\n    middleName: '',\n    lastName: '',\n    dateOfBirth: '',\n    gender: '',\n    address: '',\n    tckn: '',\n    passportNumber: '',\n    isSmsActive: false,\n    isEmailActive: false,\n    phoneNumbers: [{\n      phoneNumber: '',\n      phoneType: 'mobile'\n    }],\n    emailAddresses: [{\n      emailAddress: '',\n      emailType: 'Personal'\n    }]\n  });\n  const [errors, setErrors] = useState({});\n  const [popupMessage, setPopupMessage] = useState('');\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/patient/getall');\n      setPatients(response.data);\n      console.log(response.data);\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n    }\n  };\n  const handleInputChange = (e, index, type) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'tckn' && isNaN(value)) {\n      return;\n    }\n    if (type === 'phoneNumbers') {\n      const newPhoneNumbers = [...newPatient.phoneNumbers];\n      newPhoneNumbers[index][name] = value;\n      setNewPatient(prevState => ({\n        ...prevState,\n        phoneNumbers: newPhoneNumbers\n      }));\n    } else if (type === 'emailAddresses') {\n      const newEmailAddresses = [...newPatient.emailAddresses];\n      newEmailAddresses[index][name] = value;\n      setNewPatient(prevState => ({\n        ...prevState,\n        emailAddresses: newEmailAddresses\n      }));\n    } else {\n      setNewPatient(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n  };\n  const handleCheckboxChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setNewPatient(prevState => ({\n      ...prevState,\n      [name]: checked\n    }));\n  };\n  const validateFields = () => {\n    let tempErrors = {};\n    if (!newPatient.firstName) tempErrors.firstName = 'First Name is required';\n    if (!newPatient.lastName) tempErrors.lastName = 'Last Name is required';\n    if (!newPatient.dateOfBirth) tempErrors.dateOfBirth = 'Date of Birth is required';\n    if (!newPatient.gender || newPatient.gender.length !== 1) tempErrors.gender = 'Gender must be 1 character';\n    if (!newPatient.address) tempErrors.address = 'Address is required';\n    if (!newPatient.tckn || newPatient.tckn.length !== 11) tempErrors.tckn = 'TCKN must be 11 digits';\n    if (!newPatient.passportNumber) tempErrors.passportNumber = 'Passport Number is required'; // Yeni ekleme\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0;\n  };\n  const handleAddPatient = async () => {\n    if (!validateFields()) {\n      setPopupMessage('Please correct the errors before submitting.');\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:8080/api/patient/addPatient', newPatient);\n      setPatients([...patients, response.data]);\n      setNewPatient({\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        dateOfBirth: '',\n        gender: '',\n        address: '',\n        tckn: '',\n        passportNumber: '',\n        isSmsActive: false,\n        isEmailActive: false,\n        phoneNumbers: [{\n          phoneNumber: '',\n          phoneType: 'mobile'\n        }],\n        emailAddresses: [{\n          emailAddress: '',\n          emailType: 'Personal'\n        }]\n      });\n      setErrors({});\n      setPopupMessage('Patient added successfully!');\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\n    } catch (error) {\n      console.error('Error adding patient:', error);\n      setPopupMessage('An error occurred while adding the patient.');\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/api/patient/delete/${id}`);\n      setPatients(patients.filter(patient => patient.id !== id));\n      setPopupMessage('Patient deleted successfully!');\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\n    } catch (error) {\n      console.error('Error deleting patient:', error);\n      setPopupMessage('An error occurred while deleting the patient.');\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\n    }\n  };\n  const addPhoneField = () => {\n    if (newPatient.phoneNumbers.length < 3) {\n      setNewPatient(prevState => ({\n        ...prevState,\n        phoneNumbers: [...prevState.phoneNumbers, {\n          phoneNumber: '',\n          phoneType: 'mobile'\n        }]\n      }));\n    }\n  };\n  const addEmailField = () => {\n    if (newPatient.emailAddresses.length < 3) {\n      setNewPatient(prevState => ({\n        ...prevState,\n        emailAddresses: [...prevState.emailAddresses, {\n          emailAddress: '',\n          emailType: 'Personal'\n        }]\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [popupMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '10px',\n        right: '10px',\n        backgroundColor: '#f8d7da',\n        color: '#721c24',\n        border: '1px solid #f5c6cb',\n        borderRadius: '5px',\n        padding: '10px',\n        zIndex: 1000\n      },\n      children: popupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/notifications\",\n      style: {\n        float: 'right',\n        fontSize: '18px',\n        marginRight: '20px'\n      },\n      children: \"Go to Notification Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Patient Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        placeholder: \"First Name\",\n        value: newPatient.firstName,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.firstName ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"middleName\",\n        placeholder: \"Middle Name\",\n        value: newPatient.middleName,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        placeholder: \"Last Name\",\n        value: newPatient.lastName,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.lastName ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"dateOfBirth\",\n        placeholder: \"Date of Birth\",\n        value: newPatient.dateOfBirth,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.dateOfBirth ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"gender\",\n        placeholder: \"Gender\",\n        value: newPatient.gender,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.gender ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        placeholder: \"Address\",\n        value: newPatient.address,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.address ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tckn\",\n        placeholder: \"TCKN\",\n        value: newPatient.tckn,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.tckn ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"passportNumber\",\n        placeholder: \"Passport Number\",\n        value: newPatient.passportNumber,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.passportNumber ? 'red' : ''\n        } // Yeni ekleme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"isSmsActive\",\n            checked: newPatient.isSmsActive,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), \"SMS Notifications\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"isEmailActive\",\n            checked: newPatient.isEmailActive,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), \"Email Notifications\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Phone Numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), newPatient.phoneNumbers.map((phone, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phoneNumber\",\n            placeholder: `Phone Number ${index + 1}`,\n            value: phone.phoneNumber,\n            onChange: e => handleInputChange(e, index, 'phoneNumbers'),\n            style: {\n              marginRight: '10px',\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"phoneType\",\n            value: phone.phoneType,\n            onChange: e => handleInputChange(e, index, 'phoneNumbers'),\n            style: {\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"mobile\",\n              children: \"Mobile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"home\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"work\",\n              children: \"Work\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 30\n          }, this), newPatient.phoneNumbers.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              const newPhoneNumbers = [...newPatient.phoneNumbers];\n              newPhoneNumbers.splice(index, 1);\n              setNewPatient(prevState => ({\n                ...prevState,\n                phoneNumbers: newPhoneNumbers\n              }));\n            },\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 32\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)), newPatient.phoneNumbers.length < 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addPhoneField,\n          children: \"Add Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Email Addresses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 26\n        }, this), newPatient.emailAddresses.map((email, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"emailAddress\",\n            placeholder: `Email Address ${index + 1}`,\n            value: email.emailAddress,\n            onChange: e => handleInputChange(e, index, 'emailAddresses'),\n            style: {\n              marginRight: '10px',\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"emailType\",\n            value: email.emailType,\n            onChange: e => handleInputChange(e, index, 'emailAddresses'),\n            style: {\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Personal\",\n              children: \"Personal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Work\",\n              children: \"Work\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 30\n          }, this), newPatient.emailAddresses.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              const newEmailAddresses = [...newPatient.emailAddresses];\n              newEmailAddresses.splice(index, 1);\n              setNewPatient(prevState => ({\n                ...prevState,\n                emailAddresses: newEmailAddresses\n              }));\n            },\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 32\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 28\n        }, this)), newPatient.emailAddresses.length < 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addEmailField,\n          children: \"Add Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddPatient,\n        children: \"Add Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patients List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TCKN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Passport Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email Addresses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.dateOfBirth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.tckn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.passportNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.phoneNumbers.map((phone, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [phone.phoneNumber, \" (\", phone.phoneType, \")\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 34\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.emailAddresses.map((email, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [email.emailAddress, \" (\", email.emailType, \")\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 34\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(patient.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 30\n          }, this)]\n        }, patient.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 28\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(HospitalPage, \"4Bf1N2KWYfGH46tK+CmQuVXwHjk=\");\n_c = HospitalPage;\nexport default HospitalPage;\nvar _c;\n$RefreshReg$(_c, \"HospitalPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","HospitalPage","_s","patients","setPatients","newPatient","setNewPatient","firstName","middleName","lastName","dateOfBirth","gender","address","tckn","passportNumber","isSmsActive","isEmailActive","phoneNumbers","phoneNumber","phoneType","emailAddresses","emailAddress","emailType","errors","setErrors","popupMessage","setPopupMessage","fetchPatients","response","get","data","console","log","error","handleInputChange","e","index","type","name","value","target","isNaN","newPhoneNumbers","prevState","newEmailAddresses","handleCheckboxChange","checked","validateFields","tempErrors","length","Object","keys","handleAddPatient","setTimeout","post","handleDelete","id","delete","filter","patient","addPhoneField","addEmailField","children","style","position","top","right","backgroundColor","color","border","borderRadius","padding","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","to","float","fontSize","marginRight","marginBottom","placeholder","onChange","borderColor","map","phone","display","alignItems","flex","onClick","splice","email","_c","$RefreshReg$"],"sources":["C:/Users/alper/OneDrive/Masaüstü/word/my-app/src/component/hospital/HospitalPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'; // React Router'dan Link bileşeni\r\n\r\nconst HospitalPage = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [newPatient, setNewPatient] = useState({\r\n    firstName: '',\r\n    middleName: '',\r\n    lastName: '',\r\n    dateOfBirth: '',\r\n    gender: '',\r\n    address: '',\r\n    tckn: '',\r\n    passportNumber: '',\r\n    isSmsActive: false,\r\n    isEmailActive: false,\r\n    phoneNumbers: [{ phoneNumber: '', phoneType: 'mobile' }],\r\n    emailAddresses: [{ emailAddress: '', emailType: 'Personal' }]\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [popupMessage, setPopupMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8080/api/patient/getall');\r\n      setPatients(response.data);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching patients:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, index, type) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'tckn' && isNaN(value)) {\r\n      return;\r\n    }\r\n\r\n    if (type === 'phoneNumbers') {\r\n      const newPhoneNumbers = [...newPatient.phoneNumbers];\r\n      newPhoneNumbers[index][name] = value;\r\n      setNewPatient(prevState => ({ ...prevState, phoneNumbers: newPhoneNumbers }));\r\n    } else if (type === 'emailAddresses') {\r\n      const newEmailAddresses = [...newPatient.emailAddresses];\r\n      newEmailAddresses[index][name] = value;\r\n      setNewPatient(prevState => ({ ...prevState, emailAddresses: newEmailAddresses }));\r\n    } else {\r\n      setNewPatient(prevState => ({ ...prevState, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setNewPatient(prevState => ({ ...prevState, [name]: checked }));\r\n  };\r\n\r\n  const validateFields = () => {\r\n    let tempErrors = {};\r\n    if (!newPatient.firstName) tempErrors.firstName = 'First Name is required';\r\n    if (!newPatient.lastName) tempErrors.lastName = 'Last Name is required';\r\n    if (!newPatient.dateOfBirth) tempErrors.dateOfBirth = 'Date of Birth is required';\r\n    if (!newPatient.gender || newPatient.gender.length !== 1) tempErrors.gender = 'Gender must be 1 character';\r\n    if (!newPatient.address) tempErrors.address = 'Address is required';\r\n    if (!newPatient.tckn || newPatient.tckn.length !== 11) tempErrors.tckn = 'TCKN must be 11 digits';\r\n    if (!newPatient.passportNumber) tempErrors.passportNumber = 'Passport Number is required'; // Yeni ekleme\r\n    setErrors(tempErrors);\r\n  \r\n    return Object.keys(tempErrors).length === 0;\r\n  };\r\n\r\n  const handleAddPatient = async () => {\r\n    if (!validateFields()) {\r\n      setPopupMessage('Please correct the errors before submitting.');\r\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/patient/addPatient', newPatient);\r\n      setPatients([...patients, response.data]);\r\n      setNewPatient({\r\n        firstName: '',\r\n        middleName: '',\r\n        lastName: '',\r\n        dateOfBirth: '',\r\n        gender: '',\r\n        address: '',\r\n        tckn: '',\r\n        passportNumber: '',\r\n        isSmsActive: false,\r\n        isEmailActive: false,\r\n        phoneNumbers: [{ phoneNumber: '', phoneType: 'mobile' }],\r\n        emailAddresses: [{ emailAddress: '', emailType: 'Personal' }]\r\n      });\r\n      setErrors({});\r\n      setPopupMessage('Patient added successfully!');\r\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\r\n    } catch (error) {\r\n      console.error('Error adding patient:', error);\r\n      setPopupMessage('An error occurred while adding the patient.');\r\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/api/patient/delete/${id}`);\r\n      setPatients(patients.filter(patient => patient.id !== id));\r\n      setPopupMessage('Patient deleted successfully!');\r\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\r\n    } catch (error) {\r\n      console.error('Error deleting patient:', error);\r\n      setPopupMessage('An error occurred while deleting the patient.');\r\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\r\n    }\r\n  };\r\n\r\n  const addPhoneField = () => {\r\n    if (newPatient.phoneNumbers.length < 3) {\r\n      setNewPatient(prevState => ({\r\n        ...prevState,\r\n        phoneNumbers: [...prevState.phoneNumbers, { phoneNumber: '', phoneType: 'mobile' }]\r\n      }));\r\n    }\r\n  };\r\n\r\n  const addEmailField = () => {\r\n    if (newPatient.emailAddresses.length < 3) {\r\n      setNewPatient(prevState => ({\r\n        ...prevState,\r\n        emailAddresses: [...prevState.emailAddresses, { emailAddress: '', emailType: 'Personal' }]\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Popup Message */}\r\n      {popupMessage && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          top: '10px',\r\n          right: '10px',\r\n          backgroundColor: '#f8d7da',\r\n          color: '#721c24',\r\n          border: '1px solid #f5c6cb',\r\n          borderRadius: '5px',\r\n          padding: '10px',\r\n          zIndex: 1000\r\n        }}>\r\n          {popupMessage}\r\n        </div>\r\n      )}\r\n\r\n      <Link to=\"/notifications\" style={{ float: 'right', fontSize: '18px', marginRight: '20px' }}>\r\n        Go to Notification Page\r\n      </Link>\r\n\r\n      <h1>Hospital Patient Management</h1>\r\n\r\n      {/* Add Patient Form */}\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h2>Add New Patient</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          placeholder=\"First Name\"\r\n          value={newPatient.firstName}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.firstName ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"middleName\"\r\n          placeholder=\"Middle Name\"\r\n          value={newPatient.middleName}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          placeholder=\"Last Name\"\r\n          value={newPatient.lastName}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.lastName ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"dateOfBirth\"\r\n          placeholder=\"Date of Birth\"\r\n          value={newPatient.dateOfBirth}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.dateOfBirth ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"gender\"\r\n          placeholder=\"Gender\"\r\n          value={newPatient.gender}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.gender ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"address\"\r\n          placeholder=\"Address\"\r\n          value={newPatient.address}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.address ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"tckn\"\r\n          placeholder=\"TCKN\"\r\n          value={newPatient.tckn}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.tckn ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"passportNumber\"\r\n          placeholder=\"Passport Number\"\r\n          value={newPatient.passportNumber}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.passportNumber ? 'red' : '' }} // Yeni ekleme\r\n        />\r\n\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"isSmsActive\"\r\n              checked={newPatient.isSmsActive}\r\n              onChange={handleCheckboxChange}\r\n            />\r\n            SMS Notifications\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"isEmailActive\"\r\n              checked={newPatient.isEmailActive}\r\n              onChange={handleCheckboxChange}\r\n            />\r\n            Email Notifications\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <h3>Phone Numbers</h3>\r\n          {newPatient.phoneNumbers.map((phone, index) => (\r\n            <div key={index} style={{ display: 'flex', alignItems: 'center' }}>\r\n              <input\r\n                               type=\"text\"\r\n                               name=\"phoneNumber\"\r\n                               placeholder={`Phone Number ${index + 1}`}\r\n                               value={phone.phoneNumber}\r\n                               onChange={(e) => handleInputChange(e, index, 'phoneNumbers')}\r\n                               style={{ marginRight: '10px', flex: 1 }}\r\n                             />\r\n                             <select\r\n                               name=\"phoneType\"\r\n                               value={phone.phoneType}\r\n                               onChange={(e) => handleInputChange(e, index, 'phoneNumbers')}\r\n                               style={{ marginRight: '10px' }}\r\n                             >\r\n                               <option value=\"mobile\">Mobile</option>\r\n                               <option value=\"home\">Home</option>\r\n                               <option value=\"work\">Work</option>\r\n                             </select>\r\n                             {newPatient.phoneNumbers.length > 1 && (\r\n                               <button\r\n                                 type=\"button\"\r\n                                 onClick={() => {\r\n                                   const newPhoneNumbers = [...newPatient.phoneNumbers];\r\n                                   newPhoneNumbers.splice(index, 1);\r\n                                   setNewPatient(prevState => ({ ...prevState, phoneNumbers: newPhoneNumbers }));\r\n                                 }}\r\n                               >\r\n                                 Remove\r\n                               </button>\r\n                             )}\r\n                           </div>\r\n                         ))}\r\n                         {newPatient.phoneNumbers.length < 3 && (\r\n                           <button type=\"button\" onClick={addPhoneField}>\r\n                             Add Phone Number\r\n                           </button>\r\n                         )}\r\n                       </div>\r\n               \r\n                       <div>\r\n                         <h3>Email Addresses</h3>\r\n                         {newPatient.emailAddresses.map((email, index) => (\r\n                           <div key={index} style={{ display: 'flex', alignItems: 'center' }}>\r\n                             <input\r\n                               type=\"email\"\r\n                               name=\"emailAddress\"\r\n                               placeholder={`Email Address ${index + 1}`}\r\n                               value={email.emailAddress}\r\n                               onChange={(e) => handleInputChange(e, index, 'emailAddresses')}\r\n                               style={{ marginRight: '10px', flex: 1 }}\r\n                             />\r\n                             <select\r\n                               name=\"emailType\"\r\n                               value={email.emailType}\r\n                               onChange={(e) => handleInputChange(e, index, 'emailAddresses')}\r\n                               style={{ marginRight: '10px' }}\r\n                             >\r\n                               <option value=\"Personal\">Personal</option>\r\n                               <option value=\"Work\">Work</option>\r\n                               <option value=\"Other\">Other</option>\r\n                             </select>\r\n                             {newPatient.emailAddresses.length > 1 && (\r\n                               <button\r\n                                 type=\"button\"\r\n                                 onClick={() => {\r\n                                   const newEmailAddresses = [...newPatient.emailAddresses];\r\n                                   newEmailAddresses.splice(index, 1);\r\n                                   setNewPatient(prevState => ({ ...prevState, emailAddresses: newEmailAddresses }));\r\n                                 }}\r\n                               >\r\n                                 Remove\r\n                               </button>\r\n                             )}\r\n                           </div>\r\n                         ))}\r\n                         {newPatient.emailAddresses.length < 3 && (\r\n                           <button type=\"button\" onClick={addEmailField}>\r\n                             Add Email Address\r\n                           </button>\r\n                         )}\r\n                       </div>\r\n               \r\n                       <button type=\"button\" onClick={handleAddPatient}>\r\n                         Add Patient\r\n                       </button>\r\n                     </div>\r\n               \r\n                     {/* Displaying Patients */}\r\n                     <h2>Patients List</h2>\r\n                     <table>\r\n                       <thead>\r\n                         <tr>\r\n                           <th>First Name</th>\r\n                           <th>Last Name</th>\r\n                           <th>Date of Birth</th>\r\n                           <th>Gender</th>\r\n                           <th>Address</th>\r\n                           <th>TCKN</th>\r\n                           <th>Passport Number</th>\r\n                           <th>Phone Numbers</th>\r\n                           <th>Email Addresses</th>\r\n                           <th>Actions</th>\r\n                         </tr>\r\n                       </thead>\r\n                       <tbody>\r\n                         {patients.map(patient => (\r\n                           <tr key={patient.id}>\r\n                             <td>{patient.firstName}</td>\r\n                             <td>{patient.lastName}</td>\r\n                             <td>{patient.dateOfBirth}</td>\r\n                             <td>{patient.gender}</td>\r\n                             <td>{patient.address}</td>\r\n                             <td>{patient.tckn}</td>\r\n                             <td>{patient.passportNumber}</td>\r\n                             <td>\r\n                               {patient.phoneNumbers.map((phone, index) => (\r\n                                 <div key={index}>\r\n                                   {phone.phoneNumber} ({phone.phoneType})\r\n                                 </div>\r\n                               ))}\r\n                             </td>\r\n                             <td>\r\n                               {patient.emailAddresses.map((email, index) => (\r\n                                 <div key={index}>\r\n                                   {email.emailAddress} ({email.emailType})\r\n                                 </div>\r\n                               ))}\r\n                             </td>\r\n                             <td>\r\n                               <button onClick={() => handleDelete(patient.id)}>Delete</button>\r\n                             </td>\r\n                           </tr>\r\n                         ))}\r\n                       </tbody>\r\n                     </table>\r\n                   </div>\r\n                 );\r\n               };\r\n               \r\n               export default HospitalPage;\r\n               \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}