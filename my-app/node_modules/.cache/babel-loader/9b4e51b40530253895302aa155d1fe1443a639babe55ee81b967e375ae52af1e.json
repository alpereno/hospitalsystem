{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alper\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\word\\\\my-app\\\\src\\\\component\\\\hospital\\\\HospitalPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HospitalPage = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [newPatient, setNewPatient] = useState({\n    firstName: '',\n    middleName: '',\n    lastName: '',\n    dateOfBirth: '',\n    gender: '',\n    address: '',\n    tckn: '',\n    passportNumber: '',\n    isSmsActive: false,\n    isEmailActive: false,\n    phoneNumbers: [],\n    emailAddresses: []\n  });\n  const [errors, setErrors] = useState({});\n  const [popupMessage, setPopupMessage] = useState('');\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/patient/getall');\n      setPatients(response.data);\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'tckn' && isNaN(value)) {\n      return;\n    }\n    if (name.startsWith('phoneNumber_')) {\n      const index = name.split('_')[1];\n      const updatedPhoneNumbers = [...newPatient.phoneNumbers];\n      updatedPhoneNumbers[index] = {\n        ...updatedPhoneNumbers[index],\n        phoneNumber: value\n      };\n      setNewPatient(prevState => ({\n        ...prevState,\n        phoneNumbers: updatedPhoneNumbers\n      }));\n    } else if (name.startsWith('emailAddress_')) {\n      const index = name.split('_')[1];\n      const updatedEmailAddresses = [...newPatient.emailAddresses];\n      updatedEmailAddresses[index] = {\n        ...updatedEmailAddresses[index],\n        emailAddress: value\n      };\n      setNewPatient(prevState => ({\n        ...prevState,\n        emailAddresses: updatedEmailAddresses\n      }));\n    } else {\n      setNewPatient(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n  };\n  const handleSelectChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.startsWith('phoneType_')) {\n      const index = name.split('_')[1];\n      const updatedPhoneNumbers = [...newPatient.phoneNumbers];\n      updatedPhoneNumbers[index] = {\n        ...updatedPhoneNumbers[index],\n        phoneType: value\n      };\n      setNewPatient(prevState => ({\n        ...prevState,\n        phoneNumbers: updatedPhoneNumbers\n      }));\n    } else if (name.startsWith('emailType_')) {\n      const index = name.split('_')[1];\n      const updatedEmailAddresses = [...newPatient.emailAddresses];\n      updatedEmailAddresses[index] = {\n        ...updatedEmailAddresses[index],\n        emailType: value\n      };\n      setNewPatient(prevState => ({\n        ...prevState,\n        emailAddresses: updatedEmailAddresses\n      }));\n    }\n  };\n  const handleCheckboxChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setNewPatient(prevState => ({\n      ...prevState,\n      [name]: checked\n    }));\n  };\n  const validateFields = () => {\n    let tempErrors = {};\n    if (!newPatient.firstName) tempErrors.firstName = 'First Name is required';\n    if (!newPatient.lastName) tempErrors.lastName = 'Last Name is required';\n    if (!newPatient.dateOfBirth) tempErrors.dateOfBirth = 'Date of Birth is required';\n    if (!newPatient.gender || newPatient.gender.length !== 1) tempErrors.gender = 'Gender must be 1 character';\n    if (!newPatient.address) tempErrors.address = 'Address is required';\n    if (!newPatient.tckn || newPatient.tckn.length !== 11) tempErrors.tckn = 'TCKN must be 11 digits';\n    if (!newPatient.passportNumber) tempErrors.passportNumber = 'Passport Number is required';\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0;\n  };\n  const handleAddPatient = async () => {\n    if (!validateFields()) {\n      setPopupMessage('Please correct the errors before submitting.');\n      setTimeout(() => setPopupMessage(''), 3000);\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:8080/api/patient/addPatient', newPatient);\n      setPatients([...patients, response.data]);\n      setNewPatient({\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        dateOfBirth: '',\n        gender: '',\n        address: '',\n        tckn: '',\n        passportNumber: '',\n        isSmsActive: false,\n        isEmailActive: false,\n        phoneNumbers: [],\n        emailAddresses: []\n      });\n      setErrors({});\n      setPopupMessage('Patient added successfully!');\n      setTimeout(() => setPopupMessage(''), 3000);\n    } catch (error) {\n      console.error('Error adding patient:', error);\n      setPopupMessage('An error occurred while adding the patient.');\n      setTimeout(() => setPopupMessage(''), 3000);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/api/patient/delete/${id}`);\n      setPatients(patients.filter(patient => patient.id !== id));\n      setPopupMessage('Patient deleted successfully!');\n      setTimeout(() => setPopupMessage(''), 3000);\n    } catch (error) {\n      console.error('Error deleting patient:', error);\n      setPopupMessage('An error occurred while deleting the patient.');\n      setTimeout(() => setPopupMessage(''), 3000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [popupMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '10px',\n        right: '10px',\n        backgroundColor: '#f8d7da',\n        color: '#721c24',\n        border: '1px solid #f5c6cb',\n        borderRadius: '5px',\n        padding: '10px',\n        zIndex: 1000\n      },\n      children: popupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/notifications\",\n      style: {\n        float: 'right',\n        fontSize: '18px',\n        marginRight: '20px'\n      },\n      children: \"Go to Notification Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Patient Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        placeholder: \"First Name\",\n        value: newPatient.firstName,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.firstName ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"middleName\",\n        placeholder: \"Middle Name\",\n        value: newPatient.middleName,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        placeholder: \"Last Name\",\n        value: newPatient.lastName,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.lastName ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"dateOfBirth\",\n        placeholder: \"Date of Birth\",\n        value: newPatient.dateOfBirth,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.dateOfBirth ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"gender\",\n        placeholder: \"Gender\",\n        value: newPatient.gender,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.gender ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        placeholder: \"Address\",\n        value: newPatient.address,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.address ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tckn\",\n        placeholder: \"TCKN\",\n        value: newPatient.tckn,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.tckn ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"passportNumber\",\n        placeholder: \"Passport Number\",\n        value: newPatient.passportNumber,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.passportNumber ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), newPatient.phoneNumbers.map((phone, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `phoneNumber_${index}`,\n          placeholder: \"Phone Number\",\n          value: phone.phoneNumber || '',\n          onChange: handleInputChange,\n          style: {\n            borderColor: errors.phoneNumbers ? 'red' : ''\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: `phoneType_${index}`,\n          value: phone.phoneType || '',\n          onChange: handleSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mobile\",\n            children: \"Mobile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"home\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setNewPatient(prevState => ({\n          ...prevState,\n          phoneNumbers: [...prevState.phoneNumbers, {\n            phoneNumber: '',\n            phoneType: ''\n          }]\n        })),\n        children: \"Add Phone Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), newPatient.emailAddresses.map((email, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: `emailAddress_${index}`,\n          placeholder: \"Email Address\",\n          value: email.emailAddress || '',\n          onChange: handleInputChange,\n          style: {\n            borderColor: errors.emailAddresses ? 'red' : ''\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: `emailType_${index}`,\n          value: email.emailType || '',\n          onChange: handleSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"personal\",\n            children: \"Personal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"work\",\n            children: \"Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setNewPatient(prevState => ({\n          ...prevState,\n          emailAddresses: [...prevState.emailAddresses, {\n            emailAddress: '',\n            emailType: ''\n          }]\n        })),\n        children: \"Add Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"isSmsActive\",\n          checked: newPatient.isSmsActive,\n          onChange: handleCheckboxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), \"SMS Active\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"isEmailActive\",\n          checked: newPatient.isEmailActive,\n          onChange: handleCheckboxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), \"Email Active\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPatient,\n        children: \"Add Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patients List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TCKN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Passport Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email Addresses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.dateOfBirth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.tckn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.passportNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.phoneNumbers.map((phone, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [phone.phoneNumber, \" (\", phone.phoneType, \")\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.emailAddresses.map((email, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [email.emailAddress, \" (\", email.emailType, \")\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(patient.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, patient.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(HospitalPage, \"yIzZqiWDSU99EMQrMgCZC+4zcmg=\");\n_c = HospitalPage;\nexport default HospitalPage;\nvar _c;\n$RefreshReg$(_c, \"HospitalPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","HospitalPage","_s","patients","setPatients","newPatient","setNewPatient","firstName","middleName","lastName","dateOfBirth","gender","address","tckn","passportNumber","isSmsActive","isEmailActive","phoneNumbers","emailAddresses","errors","setErrors","popupMessage","setPopupMessage","fetchPatients","response","get","data","error","console","handleInputChange","e","name","value","target","isNaN","startsWith","index","split","updatedPhoneNumbers","phoneNumber","prevState","updatedEmailAddresses","emailAddress","handleSelectChange","phoneType","emailType","handleCheckboxChange","checked","validateFields","tempErrors","length","Object","keys","handleAddPatient","setTimeout","post","handleDelete","id","delete","filter","patient","children","style","position","top","right","backgroundColor","color","border","borderRadius","padding","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","to","float","fontSize","marginRight","marginBottom","type","placeholder","onChange","borderColor","map","phone","onClick","email","_c","$RefreshReg$"],"sources":["C:/Users/alper/OneDrive/Masaüstü/word/my-app/src/component/hospital/HospitalPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HospitalPage = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [newPatient, setNewPatient] = useState({\r\n    firstName: '',\r\n    middleName: '',\r\n    lastName: '',\r\n    dateOfBirth: '',\r\n    gender: '',\r\n    address: '',\r\n    tckn: '',\r\n    passportNumber: '',\r\n    isSmsActive: false,\r\n    isEmailActive: false,\r\n    phoneNumbers: [],\r\n    emailAddresses: []\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [popupMessage, setPopupMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8080/api/patient/getall');\r\n      setPatients(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching patients:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'tckn' && isNaN(value)) {\r\n      return;\r\n    }\r\n    if (name.startsWith('phoneNumber_')) {\r\n      const index = name.split('_')[1];\r\n      const updatedPhoneNumbers = [...newPatient.phoneNumbers];\r\n      updatedPhoneNumbers[index] = {\r\n        ...updatedPhoneNumbers[index],\r\n        phoneNumber: value\r\n      };\r\n      setNewPatient(prevState => ({ ...prevState, phoneNumbers: updatedPhoneNumbers }));\r\n    } else if (name.startsWith('emailAddress_')) {\r\n      const index = name.split('_')[1];\r\n      const updatedEmailAddresses = [...newPatient.emailAddresses];\r\n      updatedEmailAddresses[index] = {\r\n        ...updatedEmailAddresses[index],\r\n        emailAddress: value\r\n      };\r\n      setNewPatient(prevState => ({ ...prevState, emailAddresses: updatedEmailAddresses }));\r\n    } else {\r\n      setNewPatient(prevState => ({ ...prevState, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleSelectChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name.startsWith('phoneType_')) {\r\n      const index = name.split('_')[1];\r\n      const updatedPhoneNumbers = [...newPatient.phoneNumbers];\r\n      updatedPhoneNumbers[index] = {\r\n        ...updatedPhoneNumbers[index],\r\n        phoneType: value\r\n      };\r\n      setNewPatient(prevState => ({ ...prevState, phoneNumbers: updatedPhoneNumbers }));\r\n    } else if (name.startsWith('emailType_')) {\r\n      const index = name.split('_')[1];\r\n      const updatedEmailAddresses = [...newPatient.emailAddresses];\r\n      updatedEmailAddresses[index] = {\r\n        ...updatedEmailAddresses[index],\r\n        emailType: value\r\n      };\r\n      setNewPatient(prevState => ({ ...prevState, emailAddresses: updatedEmailAddresses }));\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setNewPatient(prevState => ({ ...prevState, [name]: checked }));\r\n  };\r\n\r\n  const validateFields = () => {\r\n    let tempErrors = {};\r\n    if (!newPatient.firstName) tempErrors.firstName = 'First Name is required';\r\n    if (!newPatient.lastName) tempErrors.lastName = 'Last Name is required';\r\n    if (!newPatient.dateOfBirth) tempErrors.dateOfBirth = 'Date of Birth is required';\r\n    if (!newPatient.gender || newPatient.gender.length !== 1) tempErrors.gender = 'Gender must be 1 character';\r\n    if (!newPatient.address) tempErrors.address = 'Address is required';\r\n    if (!newPatient.tckn || newPatient.tckn.length !== 11) tempErrors.tckn = 'TCKN must be 11 digits';\r\n    if (!newPatient.passportNumber) tempErrors.passportNumber = 'Passport Number is required';\r\n    setErrors(tempErrors);\r\n    return Object.keys(tempErrors).length === 0;\r\n  };\r\n\r\n  const handleAddPatient = async () => {\r\n    if (!validateFields()) {\r\n      setPopupMessage('Please correct the errors before submitting.');\r\n      setTimeout(() => setPopupMessage(''), 3000);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/patient/addPatient', newPatient);\r\n      setPatients([...patients, response.data]);\r\n      setNewPatient({\r\n        firstName: '',\r\n        middleName: '',\r\n        lastName: '',\r\n        dateOfBirth: '',\r\n        gender: '',\r\n        address: '',\r\n        tckn: '',\r\n        passportNumber: '',\r\n        isSmsActive: false,\r\n        isEmailActive: false,\r\n        phoneNumbers: [],\r\n        emailAddresses: []\r\n      });\r\n      setErrors({});\r\n      setPopupMessage('Patient added successfully!');\r\n      setTimeout(() => setPopupMessage(''), 3000);\r\n    } catch (error) {\r\n      console.error('Error adding patient:', error);\r\n      setPopupMessage('An error occurred while adding the patient.');\r\n      setTimeout(() => setPopupMessage(''), 3000);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/api/patient/delete/${id}`);\r\n      setPatients(patients.filter(patient => patient.id !== id));\r\n      setPopupMessage('Patient deleted successfully!');\r\n      setTimeout(() => setPopupMessage(''), 3000);\r\n    } catch (error) {\r\n      console.error('Error deleting patient:', error);\r\n      setPopupMessage('An error occurred while deleting the patient.');\r\n      setTimeout(() => setPopupMessage(''), 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Popup Message */}\r\n      {popupMessage && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          top: '10px',\r\n          right: '10px',\r\n          backgroundColor: '#f8d7da',\r\n          color: '#721c24',\r\n          border: '1px solid #f5c6cb',\r\n          borderRadius: '5px',\r\n          padding: '10px',\r\n          zIndex: 1000\r\n        }}>\r\n          {popupMessage}\r\n        </div>\r\n      )}\r\n\r\n      <Link to=\"/notifications\" style={{ float: 'right', fontSize: '18px', marginRight: '20px' }}>\r\n        Go to Notification Page\r\n      </Link>\r\n\r\n      <h1>Hospital Patient Management</h1>\r\n\r\n      {/* Add Patient Form */}\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h2>Add New Patient</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          placeholder=\"First Name\"\r\n          value={newPatient.firstName}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.firstName ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"middleName\"\r\n          placeholder=\"Middle Name\"\r\n          value={newPatient.middleName}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          placeholder=\"Last Name\"\r\n          value={newPatient.lastName}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.lastName ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"dateOfBirth\"\r\n          placeholder=\"Date of Birth\"\r\n          value={newPatient.dateOfBirth}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.dateOfBirth ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"gender\"\r\n          placeholder=\"Gender\"\r\n          value={newPatient.gender}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.gender ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"address\"\r\n          placeholder=\"Address\"\r\n          value={newPatient.address}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.address ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"tckn\"\r\n          placeholder=\"TCKN\"\r\n          value={newPatient.tckn}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.tckn ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"passportNumber\"\r\n          placeholder=\"Passport Number\"\r\n          value={newPatient.passportNumber}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.passportNumber ? 'red' : '' }}\r\n        />\r\n\r\n        {/* Phone Numbers */}\r\n        {newPatient.phoneNumbers.map((phone, index) => (\r\n          <div key={index} style={{ marginBottom: '10px' }}>\r\n            <input\r\n              type=\"text\"\r\n              name={`phoneNumber_${index}`}\r\n              placeholder=\"Phone Number\"\r\n              value={phone.phoneNumber || ''}\r\n              onChange={handleInputChange}\r\n              style={{ borderColor: errors.phoneNumbers ? 'red' : '' }}\r\n            />\r\n            <select\r\n              name={`phoneType_${index}`}\r\n              value={phone.phoneType || ''}\r\n              onChange={handleSelectChange}\r\n            >\r\n              <option value=\"\">Select Type</option>\r\n              <option value=\"mobile\">Mobile</option>\r\n              <option value=\"home\">Home</option>\r\n            </select>\r\n          </div>\r\n        ))}\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setNewPatient(prevState => ({\r\n            ...prevState,\r\n            phoneNumbers: [...prevState.phoneNumbers, { phoneNumber: '', phoneType: '' }]\r\n          }))}\r\n        >\r\n          Add Phone Number\r\n        </button>\r\n\r\n        {/* Email Addresses */}\r\n        {newPatient.emailAddresses.map((email, index) => (\r\n          <div key={index} style={{ marginBottom: '10px' }}>\r\n            <input\r\n              type=\"email\"\r\n              name={`emailAddress_${index}`}\r\n              placeholder=\"Email Address\"\r\n              value={email.emailAddress || ''}\r\n              onChange={handleInputChange}\r\n              style={{ borderColor: errors.emailAddresses ? 'red' : '' }}\r\n            />\r\n            <select\r\n              name={`emailType_${index}`}\r\n              value={email.emailType || ''}\r\n              onChange={handleSelectChange}\r\n            >\r\n              <option value=\"\">Select Type</option>\r\n              <option value=\"personal\">Personal</option>\r\n              <option value=\"work\">Work</option>\r\n            </select>\r\n          </div>\r\n        ))}\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setNewPatient(prevState => ({\r\n            ...prevState,\r\n            emailAddresses: [...prevState.emailAddresses, { emailAddress: '', emailType: '' }]\r\n          }))}\r\n        >\r\n          Add Email Address\r\n        </button>\r\n\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"isSmsActive\"\r\n            checked={newPatient.isSmsActive}\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          SMS Active\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"isEmailActive\"\r\n            checked={newPatient.isEmailActive}\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          Email Active\r\n        </label>\r\n\r\n        <button onClick={handleAddPatient}>Add Patient</button>\r\n      </div>\r\n\r\n      {/* Patients List */}\r\n      <h2>Patients List</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Date of Birth</th>\r\n            <th>Address</th>\r\n            <th>TCKN</th>\r\n            <th>Passport Number</th>\r\n            <th>Phone Numbers</th>\r\n            <th>Email Addresses</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {patients.map(patient => (\r\n            <tr key={patient.id}>\r\n              <td>{patient.firstName}</td>\r\n              <td>{patient.lastName}</td>\r\n              <td>{patient.dateOfBirth}</td>\r\n              <td>{patient.address}</td>\r\n              <td>{patient.tckn}</td>\r\n              <td>{patient.passportNumber}</td>\r\n              <td>\r\n                {patient.phoneNumbers.map((phone, index) => (\r\n                  <div key={index}>{phone.phoneNumber} ({phone.phoneType})</div>\r\n                ))}\r\n              </td>\r\n              <td>\r\n                {patient.emailAddresses.map((email, index) => (\r\n                  <div key={index}>{email.emailAddress} ({email.emailType})</div>\r\n                ))}\r\n              </td>\r\n              <td>\r\n                <button onClick={() => handleDelete(patient.id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HospitalPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}