{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alper\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\word\\\\my-app\\\\src\\\\component\\\\hospital\\\\HospitalPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // React Router'dan Link bileşeni\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HospitalPage = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [newPatient, setNewPatient] = useState({\n    firstName: '',\n    middleName: '',\n    lastName: '',\n    dateOfBirth: '',\n    gender: '',\n    address: '',\n    tckn: '',\n    passportNumber: '',\n    isSmsActive: false,\n    isEmailActive: false,\n    phoneNumbers: [],\n    emailAddresses: []\n  });\n  const [editPatient, setEditPatient] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [popupMessage, setPopupMessage] = useState('');\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/patient/getall');\n      setPatients(response.data);\n      console.log(response.data);\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // TCKN alanında sadece sayıların girilmesine izin ver\n    if (name === 'tckn' && isNaN(value)) {\n      return;\n    }\n    setNewPatient(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    if (editPatient) {\n      setEditPatient(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n  };\n  const handleCheckboxChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setNewPatient(prevState => ({\n      ...prevState,\n      [name]: checked\n    }));\n    if (editPatient) {\n      setEditPatient(prevState => ({\n        ...prevState,\n        [name]: checked\n      }));\n    }\n  };\n  const validateFields = patient => {\n    let tempErrors = {};\n    if (!patient.firstName) tempErrors.firstName = 'First Name is required';\n    if (!patient.lastName) tempErrors.lastName = 'Last Name is required';\n    if (!patient.dateOfBirth) tempErrors.dateOfBirth = 'Date of Birth is required';\n    if (!patient.gender || patient.gender.length !== 1) tempErrors.gender = 'Gender must be 1 character';\n    if (!patient.address) tempErrors.address = 'Address is required';\n    if (!patient.tckn || patient.tckn.length !== 11) tempErrors.tckn = 'TCKN must be 11 digits';\n    if (!patient.passportNumber) tempErrors.passportNumber = 'Passport Number is required';\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0;\n  };\n  const handleAddPatient = async () => {\n    if (!validateFields(newPatient)) {\n      setPopupMessage('Please correct the errors before submitting.');\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:8080/api/patient/addPatient', newPatient);\n      setPatients([...patients, response.data]);\n      setNewPatient({\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        dateOfBirth: '',\n        gender: '',\n        address: '',\n        tckn: '',\n        passportNumber: '',\n        isSmsActive: false,\n        isEmailActive: false,\n        phoneNumbers: [],\n        emailAddresses: []\n      });\n      setErrors({});\n      setPopupMessage('Patient added successfully!');\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\n    } catch (error) {\n      console.error('Error adding patient:', error);\n      setPopupMessage('An error occurred while adding the patient.');\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\n    }\n  };\n  const handleUpdatePatient = async () => {\n    if (!validateFields(editPatient)) {\n      setPopupMessage('Please correct the errors before submitting.');\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\n      return;\n    }\n    try {\n      const response = await axios.put(`http://localhost:8080/api/patient/update/${editPatient.id}`, editPatient);\n      const updatedPatients = patients.map(patient => patient.id === editPatient.id ? response.data : patient);\n      setPatients(updatedPatients);\n      setEditPatient(null);\n      setErrors({});\n      setPopupMessage('Patient updated successfully!');\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\n    } catch (error) {\n      console.error('Error updating patient:', error);\n      setPopupMessage('An error occurred while updating the patient.');\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/api/patient/delete/${id}`);\n      setPatients(patients.filter(patient => patient.id !== id));\n      setPopupMessage('Patient deleted successfully!');\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\n    } catch (error) {\n      console.error('Error deleting patient:', error);\n      setPopupMessage('An error occurred while deleting the patient.');\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\n    }\n  };\n  const addPhoneNumberField = () => {\n    if (newPatient.phoneNumbers.length < 3) {\n      setNewPatient(prevState => ({\n        ...prevState,\n        phoneNumbers: [...prevState.phoneNumbers, {\n          phoneNumber: '',\n          phoneType: 'mobile'\n        }]\n      }));\n    }\n  };\n  const removePhoneNumberField = index => {\n    setNewPatient(prevState => ({\n      ...prevState,\n      phoneNumbers: prevState.phoneNumbers.filter((_, i) => i !== index)\n    }));\n  };\n  const addEmailAddressField = () => {\n    if (newPatient.emailAddresses.length < 3) {\n      setNewPatient(prevState => ({\n        ...prevState,\n        emailAddresses: [...prevState.emailAddresses, {\n          emailAddress: '',\n          emailType: 'Personal'\n        }]\n      }));\n    }\n  };\n  const removeEmailAddressField = index => {\n    setNewPatient(prevState => ({\n      ...prevState,\n      emailAddresses: prevState.emailAddresses.filter((_, i) => i !== index)\n    }));\n  };\n  const handleEditClick = patient => {\n    setEditPatient(patient);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      margin: '0 auto',\n      width: '80%'\n    },\n    children: [popupMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '10px',\n        right: '10px',\n        backgroundColor: '#f8d7da',\n        color: '#721c24',\n        border: '1px solid #f5c6cb',\n        borderRadius: '5px',\n        padding: '10px',\n        zIndex: 1000\n      },\n      children: popupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/notifications\",\n      style: {\n        float: 'right',\n        fontSize: '18px',\n        marginRight: '20px'\n      },\n      children: \"Go to Notification Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Patient Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        placeholder: \"First Name\",\n        value: newPatient.firstName,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.firstName ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"middleName\",\n        placeholder: \"Middle Name\",\n        value: newPatient.middleName,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        placeholder: \"Last Name\",\n        value: newPatient.lastName,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.lastName ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"dateOfBirth\",\n        placeholder: \"Date of Birth\",\n        value: newPatient.dateOfBirth,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.dateOfBirth ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"gender\",\n        placeholder: \"Gender\",\n        value: newPatient.gender,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.gender ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        placeholder: \"Address\",\n        value: newPatient.address,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.address ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tckn\",\n        placeholder: \"TCKN\",\n        value: newPatient.tckn,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.tckn ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"passportNumber\",\n        placeholder: \"Passport Number\",\n        value: newPatient.passportNumber,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.passportNumber ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"isSmsActive\",\n        checked: newPatient.isSmsActive,\n        onChange: handleCheckboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), \" SMS Active\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"isEmailActive\",\n        checked: newPatient.isEmailActive,\n        onChange: handleCheckboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), \" Email Active\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Phone Numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), newPatient.phoneNumbers.map((phone, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: phone.phoneNumber,\n            onChange: e => {\n              const newPhoneNumbers = [...newPatient.phoneNumbers];\n              newPhoneNumbers[index].phoneNumber = e.target.value;\n              setNewPatient(prevState => ({\n                ...prevState,\n                phoneNumbers: newPhoneNumbers\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removePhoneNumberField(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPhoneNumberField,\n          children: \"Add Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Email Addresses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), newPatient.emailAddresses.map((email, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email.emailAddress,\n            onChange: e => {\n              const newEmailAddresses = [...newPatient.emailAddresses];\n              newEmailAddresses[index].emailAddress = e.target.value;\n              setNewPatient(prevState => ({\n                ...prevState,\n                emailAddresses: newEmailAddresses\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeEmailAddressField(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addEmailAddressField,\n          children: \"Add Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPatient,\n        children: \"Add Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), editPatient && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        placeholder: \"First Name\",\n        value: editPatient.firstName,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.firstName ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"middleName\",\n        placeholder: \"Middle Name\",\n        value: editPatient.middleName,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        placeholder: \"Last Name\",\n        value: editPatient.lastName,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.lastName ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"dateOfBirth\",\n        placeholder: \"Date of Birth\",\n        value: editPatient.dateOfBirth,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.dateOfBirth ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"gender\",\n        placeholder: \"Gender\",\n        value: editPatient.gender,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.gender ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        placeholder: \"Address\",\n        value: editPatient.address,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.address ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tckn\",\n        placeholder: \"TCKN\",\n        value: editPatient.tckn,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.tckn ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"passportNumber\",\n        placeholder: \"Passport Number\",\n        value: editPatient.passportNumber,\n        onChange: handleInputChange,\n        style: {\n          borderColor: errors.passportNumber ? 'red' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"isSmsActive\",\n        checked: editPatient.isSmsActive,\n        onChange: handleCheckboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this), \" SMS Active\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"isEmailActive\",\n        checked: editPatient.isEmailActive,\n        onChange: handleCheckboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this), \" Email Active\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Phone Numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), editPatient.phoneNumbers.map((phone, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: phone.phoneNumber,\n            onChange: e => {\n              const newPhoneNumbers = [...editPatient.phoneNumbers];\n              newPhoneNumbers[index].phoneNumber = e.target.value;\n              setEditPatient(prevState => ({\n                ...prevState,\n                phoneNumbers: newPhoneNumbers\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Email Addresses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this), editPatient.emailAddresses.map((email, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email.emailAddress,\n            onChange: e => {\n              const newEmailAddresses = [...editPatient.emailAddresses];\n              newEmailAddresses[index].emailAddress = e.target.value;\n              setEditPatient(prevState => ({\n                ...prevState,\n                emailAddresses: newEmailAddresses\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdatePatient,\n        children: \"Update Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditPatient(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        border: '1px solid black',\n        borderCollapse: 'collapse'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TCKN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Passport Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email Addresses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(patient.dateOfBirth).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.tckn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.passportNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.phoneNumbers.map(phone => phone.phoneNumber).join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.emailAddresses.map(email => email.emailAddress).join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(patient),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(patient.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this)]\n        }, patient.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(HospitalPage, \"9uEPQ5HIvMbw3NASRSgv5SUuHNg=\");\n_c = HospitalPage;\nexport default HospitalPage;\nvar _c;\n$RefreshReg$(_c, \"HospitalPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","HospitalPage","_s","patients","setPatients","newPatient","setNewPatient","firstName","middleName","lastName","dateOfBirth","gender","address","tckn","passportNumber","isSmsActive","isEmailActive","phoneNumbers","emailAddresses","editPatient","setEditPatient","errors","setErrors","popupMessage","setPopupMessage","fetchPatients","response","get","data","console","log","error","handleInputChange","e","name","value","target","isNaN","prevState","handleCheckboxChange","checked","validateFields","patient","tempErrors","length","Object","keys","handleAddPatient","setTimeout","post","handleUpdatePatient","put","id","updatedPatients","map","handleDelete","delete","filter","addPhoneNumberField","phoneNumber","phoneType","removePhoneNumberField","index","_","i","addEmailAddressField","emailAddress","emailType","removeEmailAddressField","handleEditClick","style","textAlign","margin","width","children","position","top","right","backgroundColor","color","border","borderRadius","padding","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","to","float","fontSize","marginRight","marginBottom","type","placeholder","onChange","borderColor","phone","newPhoneNumbers","onClick","email","newEmailAddresses","borderCollapse","Date","toLocaleDateString","join","_c","$RefreshReg$"],"sources":["C:/Users/alper/OneDrive/Masaüstü/word/my-app/src/component/hospital/HospitalPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'; // React Router'dan Link bileşeni\r\n\r\nconst HospitalPage = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [newPatient, setNewPatient] = useState({\r\n    firstName: '',\r\n    middleName: '',\r\n    lastName: '',\r\n    dateOfBirth: '',\r\n    gender: '',\r\n    address: '',\r\n    tckn: '',\r\n    passportNumber: '',\r\n    isSmsActive: false,\r\n    isEmailActive: false,\r\n    phoneNumbers: [],\r\n    emailAddresses: []\r\n  });\r\n  const [editPatient, setEditPatient] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [popupMessage, setPopupMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8080/api/patient/getall');\r\n      setPatients(response.data);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching patients:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    // TCKN alanında sadece sayıların girilmesine izin ver\r\n    if (name === 'tckn' && isNaN(value)) {\r\n      return;\r\n    }\r\n\r\n    setNewPatient(prevState => ({ ...prevState, [name]: value }));\r\n    if (editPatient) {\r\n      setEditPatient(prevState => ({ ...prevState, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setNewPatient(prevState => ({ ...prevState, [name]: checked }));\r\n    if (editPatient) {\r\n      setEditPatient(prevState => ({ ...prevState, [name]: checked }));\r\n    }\r\n  };\r\n\r\n  const validateFields = (patient) => {\r\n    let tempErrors = {};\r\n    if (!patient.firstName) tempErrors.firstName = 'First Name is required';\r\n    if (!patient.lastName) tempErrors.lastName = 'Last Name is required';\r\n    if (!patient.dateOfBirth) tempErrors.dateOfBirth = 'Date of Birth is required';\r\n    if (!patient.gender || patient.gender.length !== 1) tempErrors.gender = 'Gender must be 1 character';\r\n    if (!patient.address) tempErrors.address = 'Address is required';\r\n    if (!patient.tckn || patient.tckn.length !== 11) tempErrors.tckn = 'TCKN must be 11 digits';\r\n    if (!patient.passportNumber) tempErrors.passportNumber = 'Passport Number is required';\r\n    setErrors(tempErrors);\r\n  \r\n    return Object.keys(tempErrors).length === 0;\r\n  };\r\n\r\n  const handleAddPatient = async () => {\r\n    if (!validateFields(newPatient)) {\r\n      setPopupMessage('Please correct the errors before submitting.');\r\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/patient/addPatient', newPatient);\r\n      setPatients([...patients, response.data]);\r\n      setNewPatient({\r\n        firstName: '',\r\n        middleName: '',\r\n        lastName: '',\r\n        dateOfBirth: '',\r\n        gender: '',\r\n        address: '',\r\n        tckn: '',\r\n        passportNumber: '',\r\n        isSmsActive: false,\r\n        isEmailActive: false,\r\n        phoneNumbers: [],\r\n        emailAddresses: []\r\n      });\r\n      setErrors({});\r\n      setPopupMessage('Patient added successfully!');\r\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\r\n    } catch (error) {\r\n      console.error('Error adding patient:', error);\r\n      setPopupMessage('An error occurred while adding the patient.');\r\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\r\n    }\r\n  };\r\n\r\n  const handleUpdatePatient = async () => {\r\n    if (!validateFields(editPatient)) {\r\n      setPopupMessage('Please correct the errors before submitting.');\r\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:8080/api/patient/update/${editPatient.id}`, editPatient);\r\n      const updatedPatients = patients.map(patient => patient.id === editPatient.id ? response.data : patient);\r\n      setPatients(updatedPatients);\r\n      setEditPatient(null);\r\n      setErrors({});\r\n      setPopupMessage('Patient updated successfully!');\r\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\r\n    } catch (error) {\r\n      console.error('Error updating patient:', error);\r\n      setPopupMessage('An error occurred while updating the patient.');\r\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/api/patient/delete/${id}`);\r\n      setPatients(patients.filter(patient => patient.id !== id));\r\n      setPopupMessage('Patient deleted successfully!');\r\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\r\n    } catch (error) {\r\n      console.error('Error deleting patient:', error);\r\n      setPopupMessage('An error occurred while deleting the patient.');\r\n      setTimeout(() => setPopupMessage(''), 3000); // Popup mesajı 3 saniye sonra kaybolur\r\n    }\r\n  };\r\n\r\n  const addPhoneNumberField = () => {\r\n    if (newPatient.phoneNumbers.length < 3) {\r\n      setNewPatient(prevState => ({\r\n        ...prevState,\r\n        phoneNumbers: [...prevState.phoneNumbers, { phoneNumber: '', phoneType: 'mobile' }]\r\n      }));\r\n    }\r\n  };\r\n\r\n  const removePhoneNumberField = (index) => {\r\n    setNewPatient(prevState => ({\r\n      ...prevState,\r\n      phoneNumbers: prevState.phoneNumbers.filter((_, i) => i !== index)\r\n    }));\r\n  };\r\n\r\n  const addEmailAddressField = () => {\r\n    if (newPatient.emailAddresses.length < 3) {\r\n      setNewPatient(prevState => ({\r\n        ...prevState,\r\n        emailAddresses: [...prevState.emailAddresses, { emailAddress: '', emailType: 'Personal' }]\r\n      }));\r\n    }\r\n  };\r\n\r\n  const removeEmailAddressField = (index) => {\r\n    setNewPatient(prevState => ({\r\n      ...prevState,\r\n      emailAddresses: prevState.emailAddresses.filter((_, i) => i !== index)\r\n    }));\r\n  };\r\n\r\n  const handleEditClick = (patient) => {\r\n    setEditPatient(patient);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', margin: '0 auto', width: '80%' }}>\r\n      {/* Popup Message */}\r\n      {popupMessage && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          top: '10px',\r\n          right: '10px',\r\n          backgroundColor: '#f8d7da',\r\n          color: '#721c24',\r\n          border: '1px solid #f5c6cb',\r\n          borderRadius: '5px',\r\n          padding: '10px',\r\n          zIndex: 1000\r\n        }}>\r\n          {popupMessage}\r\n        </div>\r\n      )}\r\n\r\n      <Link to=\"/notifications\" style={{ float: 'right', fontSize: '18px', marginRight: '20px' }}>\r\n        Go to Notification Page\r\n      </Link>\r\n\r\n      <h1>Hospital Patient Management</h1>\r\n\r\n      {/* Add Patient Form */}\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h2>Add New Patient</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          placeholder=\"First Name\"\r\n          value={newPatient.firstName}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.firstName ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"middleName\"\r\n          placeholder=\"Middle Name\"\r\n          value={newPatient.middleName}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          placeholder=\"Last Name\"\r\n          value={newPatient.lastName}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.lastName ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"dateOfBirth\"\r\n          placeholder=\"Date of Birth\"\r\n          value={newPatient.dateOfBirth}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.dateOfBirth ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"gender\"\r\n          placeholder=\"Gender\"\r\n          value={newPatient.gender}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.gender ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"address\"\r\n          placeholder=\"Address\"\r\n          value={newPatient.address}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.address ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"tckn\"\r\n          placeholder=\"TCKN\"\r\n          value={newPatient.tckn}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.tckn ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"passportNumber\"\r\n          placeholder=\"Passport Number\"\r\n          value={newPatient.passportNumber}\r\n          onChange={handleInputChange}\r\n          style={{ borderColor: errors.passportNumber ? 'red' : '' }}\r\n        />\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isSmsActive\"\r\n          checked={newPatient.isSmsActive}\r\n          onChange={handleCheckboxChange}\r\n        /> SMS Active\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isEmailActive\"\r\n          checked={newPatient.isEmailActive}\r\n          onChange={handleCheckboxChange}\r\n        /> Email Active\r\n\r\n        <div>\r\n          <h3>Phone Numbers</h3>\r\n          {newPatient.phoneNumbers.map((phone, index) => (\r\n            <div key={index}>\r\n              <input\r\n                type=\"text\"\r\n                value={phone.phoneNumber}\r\n                onChange={(e) => {\r\n                  const newPhoneNumbers = [...newPatient.phoneNumbers];\r\n                  newPhoneNumbers[index].phoneNumber = e.target.value;\r\n                  setNewPatient(prevState => ({ ...prevState, phoneNumbers: newPhoneNumbers }));\r\n                }}\r\n              />\r\n              <button onClick={() => removePhoneNumberField(index)}>Remove</button>\r\n            </div>\r\n          ))}\r\n          <button onClick={addPhoneNumberField}>Add Phone Number</button>\r\n        </div>\r\n\r\n        <div>\r\n          <h3>Email Addresses</h3>\r\n          {newPatient.emailAddresses.map((email, index) => (\r\n            <div key={index}>\r\n              <input\r\n                type=\"email\"\r\n                value={email.emailAddress}\r\n                onChange={(e) => {\r\n                  const newEmailAddresses = [...newPatient.emailAddresses];\r\n                  newEmailAddresses[index].emailAddress = e.target.value;\r\n                  setNewPatient(prevState => ({ ...prevState, emailAddresses: newEmailAddresses }));\r\n                }}\r\n              />\r\n              <button onClick={() => removeEmailAddressField(index)}>Remove</button>\r\n            </div>\r\n          ))}\r\n          <button onClick={addEmailAddressField}>Add Email Address</button>\r\n        </div>\r\n\r\n        <button onClick={handleAddPatient}>Add Patient</button>\r\n      </div>\r\n\r\n      {/* Update Patient Form */}\r\n      {editPatient && (\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <h2>Edit Patient</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            placeholder=\"First Name\"\r\n            value={editPatient.firstName}\r\n            onChange={handleInputChange}\r\n            style={{ borderColor: errors.firstName ? 'red' : '' }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"middleName\"\r\n            placeholder=\"Middle Name\"\r\n            value={editPatient.middleName}\r\n            onChange={handleInputChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            placeholder=\"Last Name\"\r\n            value={editPatient.lastName}\r\n            onChange={handleInputChange}\r\n            style={{ borderColor: errors.lastName ? 'red' : '' }}\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            name=\"dateOfBirth\"\r\n            placeholder=\"Date of Birth\"\r\n            value={editPatient.dateOfBirth}\r\n            onChange={handleInputChange}\r\n            style={{ borderColor: errors.dateOfBirth ? 'red' : '' }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"gender\"\r\n            placeholder=\"Gender\"\r\n            value={editPatient.gender}\r\n            onChange={handleInputChange}\r\n            style={{ borderColor: errors.gender ? 'red' : '' }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            placeholder=\"Address\"\r\n            value={editPatient.address}\r\n            onChange={handleInputChange}\r\n            style={{ borderColor: errors.address ? 'red' : '' }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"tckn\"\r\n            placeholder=\"TCKN\"\r\n            value={editPatient.tckn}\r\n            onChange={handleInputChange}\r\n            style={{ borderColor: errors.tckn ? 'red' : '' }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"passportNumber\"\r\n            placeholder=\"Passport Number\"\r\n            value={editPatient.passportNumber}\r\n            onChange={handleInputChange}\r\n            style={{ borderColor: errors.passportNumber ? 'red' : '' }}\r\n          />\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"isSmsActive\"\r\n            checked={editPatient.isSmsActive}\r\n            onChange={handleCheckboxChange}\r\n          /> SMS Active\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"isEmailActive\"\r\n            checked={editPatient.isEmailActive}\r\n            onChange={handleCheckboxChange}\r\n          /> Email Active\r\n\r\n          <div>\r\n            <h3>Phone Numbers</h3>\r\n            {editPatient.phoneNumbers.map((phone, index) => (\r\n              <div key={index}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={phone.phoneNumber}\r\n                  onChange={(e) => {\r\n                    const newPhoneNumbers = [...editPatient.phoneNumbers];\r\n                    newPhoneNumbers[index].phoneNumber = e.target.value;\r\n                    setEditPatient(prevState => ({ ...prevState, phoneNumbers: newPhoneNumbers }));\r\n                  }}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div>\r\n            <h3>Email Addresses</h3>\r\n            {editPatient.emailAddresses.map((email, index) => (\r\n              <div key={index}>\r\n                <input\r\n                  type=\"email\"\r\n                  value={email.emailAddress}\r\n                  onChange={(e) => {\r\n                    const newEmailAddresses = [...editPatient.emailAddresses];\r\n                    newEmailAddresses[index].emailAddress = e.target.value;\r\n                    setEditPatient(prevState => ({ ...prevState, emailAddresses: newEmailAddresses }));\r\n                  }}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <button onClick={handleUpdatePatient}>Update Patient</button>\r\n          <button onClick={() => setEditPatient(null)}>Cancel</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Patients Table */}\r\n      <table style={{ width: '100%', border: '1px solid black', borderCollapse: 'collapse' }}>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Date of Birth</th>\r\n            <th>Gender</th>\r\n            <th>Address</th>\r\n            <th>TCKN</th>\r\n            <th>Passport Number</th>\r\n            <th>Phone Numbers</th>\r\n            <th>Email Addresses</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {patients.map(patient => (\r\n            <tr key={patient.id}>\r\n              <td>{patient.id}</td>\r\n              <td>{patient.firstName}</td>\r\n              <td>{patient.lastName}</td>\r\n              <td>{new Date(patient.dateOfBirth).toLocaleDateString()}</td>\r\n              <td>{patient.gender}</td>\r\n              <td>{patient.address}</td>\r\n              <td>{patient.tckn}</td>\r\n              <td>{patient.passportNumber}</td>\r\n              <td>{patient.phoneNumbers.map(phone => phone.phoneNumber).join(', ')}</td>\r\n              <td>{patient.emailAddresses.map(email => email.emailAddress).join(', ')}</td>\r\n              <td>\r\n                <button onClick={() => handleEditClick(patient)}>Edit</button>\r\n                <button onClick={() => handleDelete(patient.id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HospitalPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}